source("objTest_fctns.R") 
source("binary_seg.R") 
#require(sbm)
require(igraph)
#require(ecp)
iter<-as.numeric(commandArgs(TRUE)[1])
L<-10;minLen<-20
c<-0.1;num_permut<-1000
type<-1
iter<-1
seed_I<-seeded.intervals(400,decay = sqrt(2))
seed_I<-seed_I[(seed_I[,2]-seed_I[,1])>minLen,]
#seed_I<-seed_I[seed_I[,2]<100|seed_I[,1]>100,]
#seed_I<-seed_I[seed_I[,2]<200|seed_I[,1]>200,]
#seed_I<-seed_I[seed_I[,2]<300|seed_I[,1]>300,]
nrow(seed_I)
n1=n2=n3=n4=100
n_nodes=200
m1<-c()
for (i in 1:n1){
  pm <- cbind(c(0.3,0.01,0.01),c(0.01,0.5,0.02),c(0.01,0.02,0.3))
  g1 <- sample_sbm(n_nodes, pref.matrix = pm, block.sizes = c(50,50,100))
  m<-c(as.matrix(as.matrix(g1, "adjacency")))
  m1<-rbind(m1,m)
}
for (i in 1:n2){
  pm <- cbind(c(0.6,0.05,0.02),c(0.05,0.2,0.01),c(0.02,0.01,0.6))
  g2 <- sample_sbm(n_nodes, pref.matrix = pm, block.sizes = c(50,50,100))
  m<-c(as.matrix(as.matrix(g2, "adjacency")))
  
  m1<-rbind(m1,m)
}
for (i in 1:n3){
  pm <- cbind(c(0.6,0.05,0.02),c(0.05,0.2,0.01),c(0.02,0.01,0.6))
  g3 <- sample_sbm(n_nodes, pref.matrix = pm, block.sizes = c(75,75,50))
  m<-c(as.matrix(as.matrix(g3, "adjacency")))
  m1<-rbind(m1,m)
}
for (i in 1:n4){
  pm <- cbind(c(0.6,0.01),c(0.01,0.3))
  g4 <- sample_sbm(n_nodes, pref.matrix = pm, block.sizes = c(150,50))
  m<-c(as.matrix(as.matrix(g4, "adjacency")))
  m1<-rbind(m1,m)
}
y_ecp<-e.divisive(X=m1,sig.lvl=0.01,R=1000,k=NULL,min.size=50)
y_ecp$estimates
library(ecp)
q()
